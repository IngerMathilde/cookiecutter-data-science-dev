[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.version}}"
description = "{{ cookiecutter.description}}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.open_source_license }}"


[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^1.6.1"
python-dotenv = "^0.15.0"
xlrd = "^1.2.0"

[tool.poetry.dev-dependencies]
bandit = "^1.6.2"
black = "^19.10b0"
docstr-coverage = "^1.2.0"
flake8 = "^3.8.3"
flake8-docstrings = "^1.5.0"
ipython = "^7.16.1"
isort = "^5.2.2"
jupyter = "^1.0.0"
mypy = "^0.782"
pytest = "^6.0.1"
pytest-cov = "^2.10.0"
pytest-xdist = "^1.34.0"
tqdm = "^4.48.0"
uvicorn = "^0.12.2"
plotly = "^4.12.0"
matplotlib = "^3.3.3"
seaborn = "^0.11.0"
wordcloud = "^1.8.1"
nltk = "^3.5"
openpyxl = "^3.0.5"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
src_paths = [{{ cookiecutter.source_name }}, "tests"]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.mypy]
plugins = "pydantic.mypy"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"